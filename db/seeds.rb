# # encoding: utf-8
# # Autogenerated by the db:seed:dump task
# # Do not hesitate to tweak this to your needs

# Attachment.create([
#   { :container_id => nil, :container_type => nil, :filename => "", :disk_filename => "", :filesize => 0, :content_type => "", :digest => "", :downloads => 0, :author_id => 0, :created_on => nil, :description => nil, :disk_directory => nil, :directory_id => nil }
# ], :without_protection => true )



# AuthSource.create([
#   { :type => "", :name => "", :host => nil, :port => nil, :account => nil, :account_password => "", :base_dn => nil, :attr_login => nil, :attr_firstname => nil, :attr_lastname => nil, :attr_mail => nil, :onthefly_register => false, :tls => false, :filter => nil, :timeout => nil }
# ], :without_protection => true )



# AuthSourceLdap.create([
#   { :type => "AuthSourceLdap", :name => "", :host => nil, :port => nil, :account => nil, :account_password => "", :base_dn => nil, :attr_login => nil, :attr_firstname => nil, :attr_lastname => nil, :attr_mail => nil, :onthefly_register => false, :tls => false, :filter => nil, :timeout => nil }
# ], :without_protection => true )



# Board.create([
#   { :project_id => nil, :name => "", :description => nil, :position => 1, :topics_count => 0, :messages_count => 0, :last_message_id => nil, :parent_id => nil }
# ], :without_protection => true )



# Change.create([
#   { :changeset_id => nil, :action => "", :path => "", :from_path => nil, :from_revision => nil, :revision => nil, :branch => nil }
# ], :without_protection => true )



# Changeset.create([
#   { :repository_id => nil, :revision => nil, :committer => nil, :committed_on => nil, :comments => nil, :commit_date => nil, :scmid => nil, :user_id => nil }
# ], :without_protection => true )



# Comment.create([
#   { :commented_type => "", :commented_id => 0, :author_id => 0, :comments => nil, :created_on => nil, :updated_on => nil }
# ], :without_protection => true )



# CustomField.create([
#   { :type => "", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# CustomValue.create([
#   { :customized_type => "", :customized_id => 0, :custom_field_id => 0, :value => nil }
# ], :without_protection => true )



# Directory.create([
#   { :project_id => 1, :name => "others" }
# ], :without_protection => true )



# Document.create([
#   { :project_id => 0, :category_id => nil, :title => "", :description => nil, :created_on => nil }
# ], :without_protection => true )



# DocumentCategory.create([
#   { :name => "", :position => 1, :is_default => false, :type => "DocumentCategory", :active => true, :project_id => nil, :parent_id => nil, :position_name => nil }
# ], :without_protection => true )



# DocumentCategoryCustomField.create([
#   { :type => "DocumentCategoryCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# EnabledModule.create([
#   { :project_id => 1, :name => "issue_tracking" },
#   { :project_id => 1, :name => "time_tracking" },
#   { :project_id => 1, :name => "news" },
#   { :project_id => 1, :name => "documents" },
#   { :project_id => 1, :name => "files" },
#   { :project_id => 1, :name => "wiki" },
#   { :project_id => 1, :name => "repository" },
#   { :project_id => 1, :name => "boards" },
#   { :project_id => 1, :name => "calendar" },
#   { :project_id => 1, :name => "gantt" }
# ], :without_protection => true )



# Enumeration.create([
#   { :name => "", :position => 1, :is_default => false, :type => nil, :active => true, :project_id => nil, :parent_id => nil, :position_name => nil }
# ], :without_protection => true )



# Group.create([
#   { :login => "", :hashed_password => "", :firstname => "", :lastname => "Managers", :mail => "", :admin => false, :status => 1, :last_login_on => nil, :language => "", :auth_source_id => nil, :created_on => "2014-01-20 14:21:32", :updated_on => "2014-01-20 14:21:32", :type => "Group", :identity_url => nil, :mail_notification => "", :salt => nil }
# ], :without_protection => true )



# GroupCustomField.create([
#   { :type => "GroupCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# Issue.create([
#   { :tracker_id => nil, :project_id => nil, :subject => "", :description => nil, :due_date => nil, :category_id => nil, :status_id => 1, :assigned_to_id => nil, :priority_id => nil, :fixed_version_id => nil, :author_id => nil, :lock_version => 0, :created_on => nil, :updated_on => nil, :start_date => nil, :done_ratio => 0, :estimated_hours => nil, :parent_id => nil, :root_id => nil, :is_private => false, :closed_on => nil }
# ], :without_protection => true )



# IssueCategory.create([
#   { :project_id => 0, :name => "", :assigned_to_id => nil }
# ], :without_protection => true )



# IssueCustomField.create([
#   { :type => "IssueCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# IssuePriority.create([
#   { :name => "", :position => 1, :is_default => false, :type => "IssuePriority", :active => true, :project_id => nil, :parent_id => nil, :position_name => nil }
# ], :without_protection => true )



# IssuePriorityCustomField.create([
#   { :type => "IssuePriorityCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# IssueQuery.create([
#   { :project_id => nil, :name => "", :filters => {"status_id"=>{:operator=>"o", :values=>[""]}}, :user_id => 0, :is_public => false, :column_names => nil, :sort_criteria => [], :group_by => nil, :type => "IssueQuery" }
# ], :without_protection => true )



# IssueRelation.create([
#   { :issue_from_id => nil, :issue_to_id => nil, :relation_type => "relates", :delay => nil }
# ], :without_protection => true )



# IssueStatus.create([
#   { :name => "open", :is_closed => false, :is_default => true, :position => 1, :default_done_ratio => nil },
#   { :name => "closed", :is_closed => true, :is_default => false, :position => 2, :default_done_ratio => nil }
# ], :without_protection => true )



# Journal.create([
#   { :journalized_id => 0, :journalized_type => "", :user_id => 0, :notes => nil, :created_on => nil, :private_notes => false }
# ], :without_protection => true )



# JournalDetail.create([
#   { :journal_id => 0, :property => "", :prop_key => "", :old_value => nil, :value => nil }
# ], :without_protection => true )



# Member.create([
#   { :user_id => 0, :project_id => 0, :created_on => nil, :mail_notification => false }
# ], :without_protection => true )



# MemberRole.create([
#   { :member_id => nil, :role_id => nil, :inherited_from => nil }
# ], :without_protection => true )



# Message.create([
#   { :board_id => nil, :parent_id => nil, :subject => "", :content => nil, :author_id => nil, :replies_count => 0, :last_reply_id => nil, :created_on => nil, :updated_on => nil, :locked => false, :sticky => 0 }
# ], :without_protection => true )



# News.create([
#   { :project_id => nil, :title => "", :summary => "", :description => nil, :author_id => 0, :created_on => nil, :comments_count => 0 }
# ], :without_protection => true )



# Principal.create([
#   { :login => "admin", :hashed_password => "e9b930b5f45cf2e06dea546cced3d090ae52bc93", :firstname => "Redmine", :lastname => "Admin", :mail => "admin@example.net", :admin => true, :status => 1, :last_login_on => nil, :language => "", :auth_source_id => nil, :created_on => "2014-01-20 14:17:13", :updated_on => "2014-01-20 14:17:13", :type => "User", :identity_url => nil, :mail_notification => "all", :salt => "892dcb843b00b58dd460585ef2bc4245" },
#   { :login => "", :hashed_password => "", :firstname => "", :lastname => "Managers", :mail => "", :admin => false, :status => 1, :last_login_on => nil, :language => "", :auth_source_id => nil, :created_on => "2014-01-20 14:21:32", :updated_on => "2014-01-20 14:21:32", :type => "Group", :identity_url => nil, :mail_notification => "", :salt => nil }
# ], :without_protection => true )



# Project.create([
#   { :name => "general activity", :description => "", :homepage => "", :is_public => true, :parent_id => nil, :created_on => "2014-01-20 14:19:54", :updated_on => "2014-01-20 14:19:54", :identifier => "general-activity", :status => 1, :inherit_members => false }
# ], :without_protection => true )



# ProjectCustomField.create([
#   { :type => "ProjectCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# Query.create([
#   { :project_id => nil, :name => "", :filters => nil, :user_id => 0, :is_public => false, :column_names => nil, :sort_criteria => [], :group_by => nil, :type => nil }
# ], :without_protection => true )



# Repository.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => nil, :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Bazaar.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Bazaar", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Cvs.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Cvs", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Darcs.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Darcs", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Filesystem.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Filesystem", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Git.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Git", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Mercurial.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Mercurial", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Repository::Subversion.create([
#   { :project_id => 0, :url => "", :login => "", :password => "", :root_url => "", :type => "Repository::Subversion", :path_encoding => nil, :log_encoding => nil, :extra_info => nil, :identifier => nil, :is_default => false }
# ], :without_protection => true )



# Role.create([
#   { :name => "Non member", :position => 1, :assignable => true, :builtin => 1, :permissions => [], :issues_visibility => "default" },
#   { :name => "Anonymous", :position => 2, :assignable => true, :builtin => 2, :permissions => [], :issues_visibility => "default" },
#   { :name => "Manager", :position => 3, :assignable => false, :builtin => 0, :permissions => [:add_project, :edit_project, :close_project, :select_project_modules, :manage_members, :manage_versions, :add_subprojects, :manage_boards, :add_messages, :edit_messages, :edit_own_messages, :delete_messages, :delete_own_messages, :view_calendar, :add_documents, :edit_documents, :delete_documents, :view_documents, :manage_files, :view_files, :view_gantt, :manage_categories, :view_issues, :add_issues, :edit_issues, :manage_issue_relations, :manage_subtasks, :set_issues_private, :set_own_issues_private, :add_issue_notes, :edit_issue_notes, :edit_own_issue_notes, :view_private_notes, :set_notes_private, :move_issues, :delete_issues, :manage_public_queries, :save_queries, :view_issue_watchers, :add_issue_watchers, :delete_issue_watchers, :manage_news, :comment_news, :manage_repository, :browse_repository, :view_changesets, :commit_access, :manage_related_issues, :view_issue, :log_time, :view_time_entries, :edit_time_entries, :edit_own_time_entries, :manage_project_activities, :manage_wiki, :rename_wiki_pages, :delete_wiki_pages, :view_wiki_pages, :export_wiki_pages, :view_wiki_edits, :edit_wiki_pages, :delete_wiki_pages_attachments, :protect_wiki_pages], :issues_visibility => "default" }
# ], :without_protection => true )



# Sprint.create([
#   { :project_id => 0, :name => "", :description => "", :effective_date => nil, :created_on => nil, :updated_on => nil, :wiki_page_title => nil, :status => "open", :sharing => "none" }
# ], :without_protection => true )



# TimeEntry.create([
#   { :project_id => nil, :user_id => nil, :issue_id => nil, :hours => nil, :comments => nil, :activity_id => nil, :spent_on => nil, :tyear => nil, :tmonth => nil, :tweek => nil, :created_on => nil, :updated_on => nil }
# ], :without_protection => true )



# TimeEntryActivity.create([
#   { :name => "", :position => 1, :is_default => false, :type => "TimeEntryActivity", :active => true, :project_id => nil, :parent_id => nil, :position_name => nil }
# ], :without_protection => true )



# TimeEntryActivityCustomField.create([
#   { :type => "TimeEntryActivityCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# TimeEntryCustomField.create([
#   { :type => "TimeEntryCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# TimeEntryQuery.create([
#   { :project_id => nil, :name => "", :filters => {"spent_on"=>{:operator=>"*", :values=>[""]}}, :user_id => 0, :is_public => false, :column_names => nil, :sort_criteria => [], :group_by => nil, :type => "TimeEntryQuery" }
# ], :without_protection => true )



# Token.create([
#   { :user_id => 1, :action => "feeds", :value => "87bf7ba0fba96c1b8adfd9cecc957dc34f8d8225", :created_on => "2014-01-20 14:42:53" }
# ], :without_protection => true )



# Tracker.create([
#   { :name => "Bug", :is_in_chlog => false, :position => 1, :is_in_roadmap => true, :fields_bits => 0 },
#   { :name => "Feature", :is_in_chlog => false, :position => 2, :is_in_roadmap => true, :fields_bits => 0 }
# ], :without_protection => true )



# User.create([
#   { :login => "admin", :hashed_password => "e9b930b5f45cf2e06dea546cced3d090ae52bc93", :firstname => "Redmine", :lastname => "Admin", :mail => "admin@example.net", :admin => true, :status => 1, :last_login_on => nil, :language => "", :auth_source_id => nil, :created_on => "2014-01-20 14:17:13", :updated_on => "2014-01-20 14:17:13", :type => "User", :identity_url => nil, :mail_notification => "all", :salt => "892dcb843b00b58dd460585ef2bc4245" },
#   { :login => "", :hashed_password => "", :firstname => "", :lastname => "Anonymous", :mail => "", :admin => false, :status => 0, :last_login_on => nil, :language => "", :auth_source_id => nil, :created_on => "2014-01-20 14:45:18", :updated_on => "2014-01-20 14:45:18", :type => "AnonymousUser", :identity_url => nil, :mail_notification => "only_my_events", :salt => nil }
# ], :without_protection => true )



# UserCustomField.create([
#   { :type => "UserCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# UserPreference.create([
#   { :user_id => 1, :others => {}, :hide_mail => false, :time_zone => nil }
# ], :without_protection => true )



# Version.create([
#   { :project_id => 0, :name => "", :description => "", :effective_date => nil, :created_on => nil, :updated_on => nil, :wiki_page_title => nil, :status => "open", :sharing => "none" }
# ], :without_protection => true )



# VersionCustomField.create([
#   { :type => "VersionCustomField", :name => "", :field_format => "", :possible_values => nil, :regexp => "", :min_length => 0, :max_length => 0, :is_required => false, :is_for_all => false, :is_filter => false, :position => 1, :searchable => false, :default_value => nil, :editable => true, :visible => true, :multiple => false }
# ], :without_protection => true )



# Watcher.create([
#   { :watchable_type => "", :watchable_id => 0, :user_id => nil }
# ], :without_protection => true )



# Wiki.create([
#   { :project_id => 1, :start_page => "Wiki", :status => 1 }
# ], :without_protection => true )



# WikiContent.create([
#   { :page_id => nil, :author_id => nil, :text => nil, :comments => "", :updated_on => nil, :version => 0 }
# ], :without_protection => true )



# WikiPage.create([
#   { :wiki_id => nil, :title => nil, :created_on => nil, :protected => false, :parent_id => nil }
# ], :without_protection => true )



# WikiRedirect.create([
#   { :wiki_id => nil, :title => nil, :redirects_to => nil, :created_on => nil }
# ], :without_protection => true )



# WorkflowPermission.create([
#   { :tracker_id => 0, :old_status_id => 0, :new_status_id => 0, :role_id => 0, :assignee => false, :author => false, :type => "WorkflowPermission", :field_name => nil, :rule => nil }
# ], :without_protection => true )



# WorkflowRule.create([
#   { :tracker_id => 1, :old_status_id => 1, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 1, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 2, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 2, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 1, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 1, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 2, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 2, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil }
# ], :without_protection => true )



# WorkflowTransition.create([
#   { :tracker_id => 1, :old_status_id => 1, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 1, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 2, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 1, :old_status_id => 2, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 1, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 1, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 2, :new_status_id => 1, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil },
#   { :tracker_id => 2, :old_status_id => 2, :new_status_id => 2, :role_id => 3, :assignee => false, :author => false, :type => "WorkflowTransition", :field_name => nil, :rule => nil }
# ], :without_protection => true )

MeetingType.create([
  { :name => "Requirement gathering" },
  { :name => "Project Kick off" },
  { :name => "Sprint review" },
  { :name => "General discussion" }
], :without_protection => true )





